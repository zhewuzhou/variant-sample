apply plugin: 'java'
apply plugin: 'jacoco-tools-base'
apply plugin: 'clone-artifacts'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

repositories {
    google()
    mavenCentral()
    jcenter()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath fileTree(dir: "../buildSrc/libs", includes: ['*.jar'])
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        classpath 'org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'
    }
}


configurations {
    provided
}

dependencies {
    compile fileTree(dir: "../libs", include: "*.jar")
//    compile project(':base:builder-test-api')
    compile "com.google.guava:guava:28.1-jre"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"

    provided gradleApi()
    provided files("../libs/builder-model-4.0.0-sources.jar")
    provided files("../libs/annotations-27.0.0-sources.jar")
//    provided project(':base:builder-model') // Only present for legacy reasons.

    testCompile gradleApi()

//    testCompile libs.junit
    testCompile 'junit:junit:4.12'
//    testCompile project(':base:testutils')
//    testCompile project(':base:builder-model')
    testCompile fileTree(dir: "../libs/test", include: "*.jar")
    testCompile "org.mockito:mockito-core:2.19.0"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

//javadoc {
//    classpath += configurations.provided
//    options.links("http://docs.oracle.com/javase/8/docs/api/", "https://docs.gradle.org/current/javadoc/")
//}
//
//task javadocZip(type: Zip) {
//    dependsOn javadoc
//    from javadoc.destinationDir
//    baseName 'javadoc'
//}

group = 'com.android.tools.build'
archivesBaseName = 'gradle-api'
version = '111'

project.ext.pomName = 'Android Gradle API'
project.ext.pomDesc = 'APIs to customize Android Gradle Builds'

//apply from: "$rootDir/buildSrc/base/publish.gradle"
//apply from: "$rootDir/buildSrc/base/bintray.gradle"
//apply from: "$rootDir/buildSrc/base/javadoc.gradle"
//
//dokka {
//    outputFormat = 'dac'
//    outputDirectory = "$rootDir/dokka-out"
//    jdkVersion = 8
//
//    includeNonPublic = false
//    skipDeprecated = false
//    skipEmptyPackages = false
//    noJdkLink = true
//
//    dacRoot = "/reference/tools"
//    classpath = [new File('$rootDir/external/gradle/gradle-5.4.1-bin.zip')]
//
//    sourceRoot {
//        path = "$projectDir/src/main/java/com/android/build/*"
//        platforms = ["JVM"]
//    }
//    externalDocumentationLink {
//        // Root URL of the generated documentation to link with. The trailing slash is required!
//        url = new URL("https://docs.gradle.org/current/javadoc/")
//        url = new URL("http://docs.oracle.com/javase/8/docs/api/")
//    }
//}

